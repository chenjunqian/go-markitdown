# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*' # Push events matching v1.0, v20.15.10, etc.
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        include:
          - os: windows
            arch: amd64
            ext: .exe
          - os: linux
            arch: amd64
            ext: ''
          - os: linux
            arch: arm64
            ext: ''
          - os: darwin
            arch: amd64
            ext: ''
          - os: darwin
            arch: arm64
            ext: ''
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22.2'
        cache: true

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Test
      run: go test -v ./...
      
    # - name: Setup gf
    #   run: wget -O gf https://github.com/gogf/gf/releases/latest/download/gf_$(go env GOOS)_$(go env GOARCH) && chmod +x gf && ./gf install -y && rm ./gf
      
    - name: Build
      run: |
        mkdir -p bin
        GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o bin/markitdown-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }} ./main.go

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1.1.0
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: bin/markitdown-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
        asset_name: markitdown-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.ext }}
        asset_content_type: application/octet-stream

    - name: Cleanup
      run: rm -rf bin
